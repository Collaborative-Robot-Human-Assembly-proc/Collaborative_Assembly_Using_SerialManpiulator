<!-- Default frames for Kinect/PSDK5 devices
     Places depth and RGB cameras in the same plane with 2.5cm baseline.
     Calibration may improve results, but these defaults are reasonably accurate.
-->
<launch>
  <arg name="camera" default="kinect" />
  <arg name="tf_prefix" default="" />
  <arg name="pub" value="kinect_base_link_1"/>

  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />
  
  

  
  <!--node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_4"
    args="1.62003 0.471664 0.771595  0.429852 0.716633 -0.46268 -0.295959 base_link kinect_rgb_optical_frame" /-->
    
    
  <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)"
    args="0 -0.02  0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_depth_frame" />  
  <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_1"
    args="0 -0.045 0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_rgb_frame" />  
  <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_2"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_depth_frame $(arg tf_prefix)/$(arg camera)_depth_optical_frame" />  
  <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_3"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_rgb_optical_frame" /> 
    
  <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_4"
    args="1.64051 0.431615 0.77040  -0.193922 -0.060029 0.952561 -0.22675 base_link kinect_link" />  
</launch>

<!-- TODO Could instead store these in camera_pose_calibration format for consistency
     with user calibrations. Blocked on camera_pose_calibration having sane dependencies. -->
