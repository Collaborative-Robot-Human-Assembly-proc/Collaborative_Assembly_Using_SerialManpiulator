<!-- Default frames for Kinect/PSDK5 devices
     Places depth and RGB cameras in the same plane with 2.5cm baseline.
     Calibration may improve results, but these defaults are reasonably accurate.
-->
<launch>
  <arg name="camera" default="kinect" />
  <arg name="tf_prefix" default="" />
  <arg name="pub" value="kinect_frames_publisher"/>

  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />
  
  

  
  <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_1"
    args="1.63941 0.450041 0.738411  0.423825 0.716699 -0.462785 -0.304214 base_link kinect_rgb_optical_frame" />
    
    
  <!--node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_4"
    args="2 0 0  0 0 0 0 base_link $(arg camera)_rgb_optical_frame" /-->
    
      <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_2"
    args="0 0 0 $(arg pi/2) -$(arg pi/2) 0 $(arg camera)_rgb_optical_frame $(arg camera)_rgb_frame" />  
    
      <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_3"
    args="0.00218 0.025 -0.005  0 0 0 $(arg camera)_rgb_frame $(arg camera)_depth_frame" />
    
 
    
      <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pub)_4"
    args="$(arg optical_rotate) $(arg camera)_depth_frame $(arg camera)_depth_optical_frame" />  

    

</launch>

<!-- TODO Could instead store these in camera_pose_calibration format for consistency
     with user calibrations. Blocked on camera_pose_calibration having sane dependencies. -->
